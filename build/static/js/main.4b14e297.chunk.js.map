{"version":3,"sources":["Search.js","services/persons.js","AddUserForm.js","Persons.js","App.js","index.js"],"names":["Search","filter","setFilter","type","value","onChange","e","target","axios","get","person","post","put","id","delete","AddUserForm","newName","setNewName","newNumber","setNewNumber","persons","setPersons","setSuccessMessage","setErrorMessage","onClick","preventDefault","contactExists","map","p","name","toLowerCase","includes","confirmText","window","confirm","oldPersonIndex","indexOf","oldPerson","updatedPerson","number","updatedPersonList","personService","then","_","catch","setTimeout","newPerson","length","Persons","i","key","App","useState","successMessage","errorMessage","useEffect","console","log","response","data","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b14e297.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Search = ({ filter, setFilter }) => {\n  return (\n    <div>\n      filter shown with{' '}\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={(e) => setFilter(e.target.value)}\n      />\n    </div>\n  );\n};\n","import axios from 'axios';\nconst BASE_URL = '/api/persons';\n\nconst getAll = () => {\n  return axios.get(BASE_URL);\n  // return request.then(response => response.data)\n};\n\nconst addPerson = (person) => {\n  return axios.post(BASE_URL, person);\n};\n\nconst updatePerson = (person) => {\n  return axios.put(`${BASE_URL}/${person.id}`, person);\n};\n\nconst deletePerson = (id) => {\n  return axios.delete(`${BASE_URL}/${id}`);\n};\n\nexport default {\n  getAll,\n  addPerson,\n  updatePerson,\n  deletePerson,\n};\n","import React from 'react';\nimport personService from './services/persons';\n\nexport const AddUserForm = ({\n  newName,\n  setNewName,\n  newNumber,\n  setNewNumber,\n  persons,\n  setPersons,\n  setSuccessMessage,\n  setErrorMessage,\n}) => {\n  // Displays error message for 3 seconds\n  const displayErrorMessage = () => {\n    setErrorMessage(`Person '${newName}' was already removed from server`);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 3000);\n  };\n\n  // Displays success message for 3 seconds\n  const displaySuccessMessage = () => {\n    setSuccessMessage(`${newName} added`);\n    setTimeout(() => {\n      setSuccessMessage(null);\n    }, 3000);\n  };\n\n  const handleSaveClick = (e) => {\n    e.preventDefault();\n    // Checks if newly created name exists in contacts list\n    const contactExists = persons\n      .map((p) => p.name.toLowerCase())\n      .includes(newName.toLowerCase());\n\n    // Existing contact replacement text\n    const confirmText = `${newName} is already added to phonebook, replace the old number with a new one?`;\n\n    if (contactExists) {\n      if (window.confirm(confirmText)) {\n        // Finds old person in the contacts list\n        const oldPersonIndex = persons\n          .map((p) => p.name.toLowerCase())\n          .indexOf(newName.toLowerCase());\n        const oldPerson = persons[oldPersonIndex];\n\n        // Updates old person object & all person list\n        const updatedPerson = { ...oldPerson, number: newNumber };\n        const updatedPersonList = [...persons];\n        updatedPersonList[oldPersonIndex] = updatedPerson;\n\n        // Tires updating person in the phonebook\n        personService\n          .updatePerson(updatedPerson)\n          .then((_) => {\n            // Updates person List & resets local state\n            setNewName('');\n            setNewNumber('');\n            setPersons(updatedPersonList);\n          })\n          .catch((_) => displayErrorMessage());\n      }\n    } else {\n      // Creates a new contact\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n        id: persons.length + 1,\n      };\n\n      // Saves data in db.json\n      personService.addPerson(newPerson).then((_) => {\n        // Updates person List & resets local state\n        setPersons([...persons, newPerson]);\n        setNewName('');\n        setNewNumber('');\n        displaySuccessMessage();\n      });\n    }\n  };\n\n  return (\n    <form>\n      <div>\n        name:{' '}\n        <input\n          type=\"text\"\n          value={newName}\n          onChange={(e) => setNewName(e.target.value)}\n        />\n      </div>\n      <div>\n        number:{' '}\n        <input\n          type=\"text\"\n          value={newNumber}\n          onChange={(e) => setNewNumber(e.target.value)}\n        />\n      </div>\n      <div>\n        <button type=\"submit\" onClick={handleSaveClick}>\n          add\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\nimport personService from './services/persons';\n\nexport const Persons = ({ persons, filter, setPersons }) => {\n  const deletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      setPersons(...[persons.filter((p) => p.id !== person.id)]);\n      personService.deletePerson(person.id);\n    }\n  };\n\n  return (\n    <div>\n      {persons\n        .filter((p) =>\n          filter === ''\n            ? true\n            : p.name.toLowerCase().includes(filter.toLowerCase())\n        )\n        .map((p, i) => (\n          <div key={`${p.name} ${i}`}>\n            <p>\n              {`${p.name} ${p.number} `}{' '}\n              <button onClick={() => deletePerson(p)}>delete</button>\n            </p>\n          </div>\n        ))}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Search } from './Search';\nimport { AddUserForm } from './AddUserForm';\nimport { Persons } from './Persons';\nimport personService from './services/persons';\nimport './App.css';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // Fetches initial data\n  useEffect(() => {\n    console.log('effect');\n    personService.getAll().then((response) => {\n      console.log('promise fulfilled');\n      setPersons(response.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {successMessage && (\n        <div className=\"success\">\n          <p>{successMessage}</p>\n        </div>\n      )}\n      {errorMessage && (\n        <div className=\"error\">\n          <p>{errorMessage}</p>\n        </div>\n      )}\n      <Search filter={filter} setFilter={setFilter} />\n      <h2>Add a new</h2>\n      <AddUserForm\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        persons={persons}\n        setPersons={setPersons}\n        setSuccessMessage={setSuccessMessage}\n        setErrorMessage={setErrorMessage}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} setPersons={setPersons} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}